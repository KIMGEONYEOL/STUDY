/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.93
 * Generated at: 2024-09-20 09:22:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.myweb.first.member.model.dto.Member;
import org.myweb.first.member.model.dto.Member;

public final class infoPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/views/common/footer.jsp", Long.valueOf(1726718365076L));
    _jspx_dependants.put("/WEB-INF/views/common/menubar.jsp", Long.valueOf(1726813078850L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("org.myweb.first.member.model.dto.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

	Member member = (Member)request.getAttribute("member");

      out.write("   \r\n");
      out.write(" \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>first</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write(" 	table th { background-color: pink; }\r\n");
      out.write(" 	table#outer { border: 2px solid navy; }\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("window.onload = function(){\r\n");
      out.write("	// input type=\"file\" 이 선택한 사진파일 이미지 미리보기 처리\r\n");
      out.write("	var photofile = document.getElementById(\"photofile\");\r\n");
      out.write("	photofile.addEventListener('change', function(event){\r\n");
      out.write("		const files = event.currentTarget.files;\r\n");
      out.write("		const file = files[0];\r\n");
      out.write("		console.log(file.name); // 선택한 파일명 확인\r\n");
      out.write("		\r\n");
      out.write("		// 선택한 파일을 img 태그의 src 속성 값으로 적용함 : 이미지 변경될 것임\r\n");
      out.write("		const myphoto = document.getElementById(\"photo\");\r\n");
      out.write("		// myphoto.src = '서버측에 있는 이미지파일의 상대|절대경로/' + file.name; // 서버측에 있는 파일일 때 사용하는 방법임\r\n");
      out.write("		// 클라이언트 컴퓨터에 있는 파일은 src 속성으로 적용할 수 없음\r\n");
      out.write("		\r\n");
      out.write("		// 클라이언트 컴퓨터에 있는 사진파일을 읽어들여서 출력되게 처리해야 함 (파일입력 > 출력처리)\r\n");
      out.write("		const reader = new FileReader(); // 파일읽기 객체 생성\r\n");
      out.write("		// 람다(lambda) 스트림 방식 사용\r\n");
      out.write("		// 이벤트 콜백함수 실행구문(기존 방식) : reader.onload = function(e){ 읽어들이기 처리 };\r\n");
      out.write("		reader.onload = (e) => { // e : event 객체\r\n");
      out.write("			myphoto.setAttribute('src', e.target.result); // e.targe : 이벤트 발생 대상(읽어들인 파일 정보)\r\n");
      out.write("			myphoto.setAttribute('data-file', file.name);\r\n");
      out.write("		}; \r\n");
      out.write("		reader.readAsDataURL(file); // 읽어서 img 에 적용 출력됨\r\n");
      out.write("		\r\n");
      out.write("	});	\r\n");
      out.write("};		\r\n");
      out.write("\r\n");
      out.write("function validate(){\r\n");
      out.write("	// 수정하기 전송 보내기 암호와 암호 확인이 일치하지 않는지 확인\r\n");
      out.write("	var pwdValue = document.getElementById('userPwd').value;\r\n");
      out.write("	var pwdValue2 = document.getElementById('userPwd2').value;\r\n");
      out.write("	if(pwdValue !== pwdValue2){\r\n");
      out.write("		alert('암호와 암호확인이 일치하지 않습니다. 다시 입력하세요.')\r\n");
      out.write("		document.getElementById('userPwd').value = ''; // 기록된 값 지우기\r\n");
      out.write("		document.getElementById('userPwd2').value = ''; // 기록된 값 지우기\r\n");
      out.write("		document.getElementByID('userPwd').focus(); // 입력 커서 지정함\r\n");
      out.write("		return false; // 전송 취소함\r\n");
      out.write("	}\r\n");
      out.write("	// 변경된 암호의 값 형식이 요구한 대로 구성되었는지 검사\r\n");
      out.write("	// 정규 표현식(Regular Expression) 사용함\r\n");
      out.write("	\r\n");
      out.write("	return true; // 전송보냄\r\n");
      out.write("}; // validate()\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write('\r');
      out.write('\n');
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("\r\n");

	Member loginUser = (Member)session.getAttribute("loginUser");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title></title>\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("nav > ul#menubar {\r\n");
      out.write("	list-style: none;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	left: 150px;	\r\n");
      out.write("}\r\n");
      out.write("nav > ul#menubar li {\r\n");
      out.write("	float: left;\r\n");
      out.write("	width: 120px;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	margin-right: 5px;\r\n");
      out.write("	padding: 0;\r\n");
      out.write("}\r\n");
      out.write("nav > ul#menubar li a {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	width: 120px;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	display: block;\r\n");
      out.write("	background: orange;\r\n");
      out.write("	color: navy;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	text-shadow: 1px 1px 2px white;\r\n");
      out.write("	padding-top: 5px;\r\n");
      out.write("}\r\n");
      out.write("nav > ul#menubar li a:hover {\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	width: 120px;\r\n");
      out.write("	height: 30px;\r\n");
      out.write("	display: block;\r\n");
      out.write("	background: navy;\r\n");
      out.write("	color: white;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	text-shadow: 1px 1px 2px white;\r\n");
      out.write("	padding-top: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("hr { clear: both;}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write('\r');
      out.write('\n');
 if(loginUser == null){ 
      out.write("\r\n");
      out.write("	<nav>\r\n");
      out.write("		<ul id=\"menubar\">\r\n");
      out.write("			<li><a href=\"main.do\">Home</a></li>\r\n");
      out.write("			<li><a href=\"nlist.do?page=1\">공지사항</a></li>\r\n");
      out.write("			<li><a href=\"blist.do?page=1\">게시글</a></li>\r\n");
      out.write("			<li><a href=\"moveAjax.do\">ajax처리</a></li>\r\n");
      out.write("			<li><a href=\"moveApi.do\">api처리</a></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("	</nav>\r\n");
 } else if(loginUser.getAdminYN().equals("Y")){
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<nav>\r\n");
      out.write("		<ul id=\"menubar\">\r\n");
      out.write("			<li><a href=\"main.do\">Home</a></li>\r\n");
      out.write("			<li><a href=\"nlist.do?page=1\">공지사항관리</a></li>\r\n");
      out.write("			<li><a href=\"blist.do?page=1\">게시글관리</a></li>\r\n");
      out.write("			<li><a href=\"mlist.do?page=1\">회원관리</a></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("	</nav>\r\n");
 } else if(loginUser != null && loginUser.getAdminYN().equals("N")){ 
      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("	<nav>\r\n");
      out.write("		<ul id=\"menubar\">\r\n");
      out.write("			<li><a href=\"main.do\">Home</a></li>\r\n");
      out.write("			<li><a href=\"nlist.do?page=1\">공지사항</a></li>\r\n");
      out.write("			<li><a href=\"blist.do?page=1\">게시글</a></li>\r\n");
      out.write("			<li><a href=\"moveAjax.do\">ajax처리</a></li>\r\n");
      out.write("			<li><a href=\"moveApi.do\">api처리</a></li>\r\n");
      out.write("			<li><a href=\"myinfo.do?userId=");
      out.print( loginUser.getUserId() );
      out.write("\">my page</a></li>\r\n");
      out.write("		</ul>\r\n");
      out.write("	</nav>\r\n");
 } 
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<hr>\r\n");
      out.write("<h1 align=\"center\">내 정보 보기 페이지</h1>\r\n");
      out.write("<br>\r\n");
      out.write("<form action=\"mupdate.do\" method=\"post\" onsubmit=\"return validate();\" enctype=\"multipart/form-data\">\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("	<input type=\"hidden\" name=\"originalUserPwd\" value=\"");
      out.print( member.getUserPwd() );
      out.write("\">\r\n");
      out.write("	<input type=\"hidden\" name=\"ofile\" value=\"");
      out.print( request.getAttribute("ofile") );
      out.write("\">\r\n");
      out.write("<table id=\"outer\" align=\"center\" width=\"700\" cellspacing=\"5\" cellpadding=\"0\">\r\n");
      out.write("	<tr><th colspan = \"2\"> 등록된 회원님의 정보는 아래와 같습니다.<br>\r\n");
      out.write("			수정할 내용이 있으면 변경하고, 수정하기 버튼을 누르세요.\r\n");
      out.write("	</th></tr>\r\n");
      out.write("	<tr><th width=\"120\">*아이디</th><td>\r\n");
      out.write("				<input type=\"text\" name=\"userId\" id=\"userId\" value=\"");
      out.print( member.getUserId() );
      out.write("\" readonly>\r\n");
      out.write("			</td></tr>\r\n");
      out.write("	<tr><th>사진첨부</th>\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		<!-- <td><input type=\"file\" name=\"photoFileName\" ></td> -->\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("		<td>\r\n");
      out.write("			");
      out.write("\r\n");
      out.write("			<div id=\"myphoto\" style=\"margin:0;width:150px;height:160px;padding:0;border:1px solid navy;\">\r\n");
      out.write("				");
      out.write("\r\n");
      out.write("				<img src=\"/first/resources/photo_files/");
      out.print( member.getPhotoFileName() );
      out.write("\" id=\"photo\" \r\n");
      out.write("				style=\"width:150px;height:160px;border:1px solid navy;display:block;margin:0;padding:0;\"\r\n");
      out.write("				alt=\"사진을 드래그 드롭하세요.\">			\r\n");
      out.write("			</div> <br>\r\n");
      out.write("			");
      out.write("\r\n");
      out.write("			");
      out.print( request.getAttribute("ofile") );
      out.write("	\r\n");
      out.write("			변경할 사진 선택 : <input type=\"file\" id ='photofile' name=\"photofile\">\r\n");
      out.write("			");
      out.write("\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr><th>*암	호</th><td><input type=\"password\" name=\"userPwd\" id=\"userPwd\" ></td></tr>\r\n");
      out.write("	<tr><th>*암호 확인</th><td><input type=\"password\" id=\"userPwd2\" ></td></tr>\r\n");
      out.write("	<tr><th>*이	름</th><td><input type=\"text\" name=\"userName\" id=\"userName\" value=\"");
      out.print( member.getUserName() );
      out.write("\" readonly></td></tr>\r\n");
      out.write("	<tr><th>*성	별</th>\r\n");
      out.write("		<td>\r\n");
      out.write("		");
 if(member.getGender().equals("M")){ 
      out.write("\r\n");
      out.write("			<input type=\"radio\" name=\"gender\" value=\"M\" checked > 남자 &nbsp;\r\n");
      out.write("			<input type=\"radio\" name=\"gender\" value=\"F\" > 여자\r\n");
      out.write("		");
 } else if (member.getGender().equals("F")) {
      out.write("\r\n");
      out.write("			<input type=\"radio\" name=\"gender\" value=\"M\" > 남자 &nbsp;\r\n");
      out.write("			<input type=\"radio\" name=\"gender\" value=\"F\" checked> 여자		\r\n");
      out.write("		");
 }
      out.write("\r\n");
      out.write("		</td>\r\n");
      out.write("	</tr>\r\n");
      out.write("	<tr><th>*나	이</th><td><input type=\"number\" name=\"age\" min=\"19\" value=\"");
      out.print( member.getAge() );
      out.write("\" ></td></tr>\r\n");
      out.write("	<tr><th>*전화번호</th><td><input type=\"tel\" name=\"phone\" value=\"");
      out.print( member.getPhone() );
      out.write("\" ></td></tr>\r\n");
      out.write("	<tr><th>*이메일</th><td><input type=\"email\" name=\"email\" value=\"");
      out.print( member.getEmail() );
      out.write("\"></td></tr\r\n");
      out.write("	>	<tr><th colspan=\"2\">\r\n");
      out.write("			<input type=\"submit\" value=\"수정하기\"> &nbsp;\r\n");
      out.write("			<a href=\"mdelete.do?userid=");
      out.print( member.getUserId());
      out.write("\">탈퇴하기</a> &nbsp;\r\n");
      out.write("			</th>	\r\n");
      out.write("	</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title></title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("footer {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	background-color: navy;\r\n");
      out.write("	color: white;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<footer>\r\n");
      out.write("copyright@test.org &nbsp; 클라우드 AI 대화형 웹애플리케이션 개발자 양성과정<br>\r\n");
      out.write("서울시 서초구 신논현동 ICT 기술협회, TEL : 02-1234-5678, FAX : 02-1234-5679\r\n");
      out.write("</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
